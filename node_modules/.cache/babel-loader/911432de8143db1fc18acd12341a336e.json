{"ast":null,"code":"var _jsxFileName = \"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/CreateTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateTask = _ref => {\n  _s();\n\n  let {\n    setTodoList,\n    todoList\n  } = _ref;\n  const [newAdded, setNewAdded] = useState({});\n  const [addTodo, setAddTodo] = useState({\n    id: \"\",\n    tasks: \"\",\n    due: \"\",\n    complete: false\n  });\n\n  const handleChange = event => {\n    setAddTodo({ ...addTodo,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  function addedTask(newTask) {}\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (addTodo.tasks === \"\") {\n      return console.log(\"Please add a task\");\n    }\n\n    ;\n\n    if (addTodo.due === \"\") {\n      return console.log(\"Please add a due date\");\n    }\n\n    fetch(\"http://localhost:3000/list\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(addTodo)\n    }).then(res => res.json()).then(data => addedTask(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"formStyle\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"tasks\",\n      placeholder: \"task to add\",\n      value: addTodo.tasks,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"due\",\n      placeholder: \"due date of task\",\n      value: addTodo.due,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"add-button\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateTask, \"dM67QyF1znrhM2rgaAQOh/q5m3U=\");\n\n_c = CreateTask;\nexport default CreateTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"sources":["/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/CreateTask.js"],"names":["React","useState","CreateTask","setTodoList","todoList","newAdded","setNewAdded","addTodo","setAddTodo","id","tasks","due","complete","handleChange","event","target","name","value","addedTask","newTask","handleSubmit","e","preventDefault","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,MAAMC,UAAU,GAAG,QAA6B;AAAA;;AAAA,MAA5B;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,GAA4B;AAC5C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC;AACnCQ,IAAAA,EAAE,EAAE,EAD+B;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,GAAG,EAAE,EAH8B;AAInCC,IAAAA,QAAQ,EAAE;AAJyB,GAAD,CAAtC;;AAOA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BN,IAAAA,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAc,OAACO,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAAhD,KAAD,CAAV;AACH,GAFD;;AAIA,WAASC,SAAT,CAAmBC,OAAnB,EAA2B,CAE1B;;AAED,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGf,OAAO,CAACG,KAAR,KAAkB,EAArB,EAAwB;AACxB,aAAOa,OAAO,CAACC,GAAR,CAAY,mBAAZ,CAAP;AACC;;AAAA;;AACD,QAAIjB,OAAO,CAACI,GAAR,KAAgB,EAApB,EAAuB;AACnB,aAAOY,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAAP;AACH;;AAEDC,IAAAA,KAAK,CAAC,4BAAD,EAA+B;AAClCC,MAAAA,MAAM,EAAE,MAD0B;AAElCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFyB;AAKlCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAevB,OAAf;AAL4B,KAA/B,CAAL,CAOCwB,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPb,EAQCF,IARD,CAQMG,IAAI,IAAIhB,SAAS,CAACgB,IAAD,CARvB;AAUH,GAnBD;;AAqBF,sBACE;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,QAAQ,EAAEd,YAA/B;AAAA,4BAEM;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,WAAW,EAAC,aAA5C;AAA0D,MAAA,KAAK,EAAEb,OAAO,CAACG,KAAzE;AAAgF,MAAA,QAAQ,EAAEG;AAA1F;AAAA;AAAA;AAAA;AAAA,YAFN,eAGM;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,KAAxB;AAA8B,MAAA,WAAW,EAAC,kBAA1C;AAA6D,MAAA,KAAK,EAAEN,OAAO,CAACI,GAA5E;AAAiF,MAAA,QAAQ,EAAEE;AAA3F;AAAA;AAAA;AAAA;AAAA,YAHN,eAIM;AAAQ,MAAA,EAAE,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA9CD;;GAAMX,U;;KAAAA,U;AAgDN,eAAeA,UAAf","sourcesContent":["import React, {useState} from 'react'\n\nconst CreateTask = ({setTodoList, todoList}) => {\n    const [newAdded, setNewAdded] = useState({})\n    const [addTodo, setAddTodo] = useState({\n        id: \"\",\n        tasks: \"\",\n        due: \"\",\n        complete: false\n    });\n\n    const handleChange = (event) => {\n        setAddTodo({ ...addTodo, [event.target.name]: event.target.value });\n    };\n\n    function addedTask(newTask){\n\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if(addTodo.tasks === \"\"){\n        return console.log(\"Please add a task\")\n        };\n        if( addTodo.due === \"\"){\n            return console.log(\"Please add a due date\")\n        }\n\n        fetch(\"http://localhost:3000/list\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(addTodo),\n        })\n        .then(res => res.json())\n        .then(data => addedTask(data))\n        \n    }\n\n  return (\n    <form id=\"formStyle\" onSubmit={handleSubmit}>\n        {/* create an input element */}\n          <input type=\"text\" name=\"tasks\" placeholder=\"task to add\" value={addTodo.tasks} onChange={handleChange}/>\n          <input type=\"text\" name=\"due\" placeholder=\"due date of task\" value={addTodo.due} onChange={handleChange}/>\n          <button id='add-button'>Add Task</button>\n    </form>\n  )\n}\n\nexport default CreateTask"]},"metadata":{},"sourceType":"module"}