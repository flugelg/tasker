{"ast":null,"code":"var _jsxFileName = \"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/TaskItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport DeleteTask from './DeleteTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskItem = _ref => {\n  _s();\n\n  let {\n    todo,\n    deleteTasks\n  } = _ref;\n  const [taskComplete, setTaskComplete] = useState();\n  const {\n    tasks,\n    due,\n    complete\n  } = todo; //deconstructs task\n\n  function handleClick() {\n    if (todo.complete == false) {\n      todo.complete = true;\n    } else {\n      todo.complete = false;\n    }\n\n    updateTask();\n    setTaskComplete(todo.complete); //updates dom for if complete or not\n  }\n\n  function updateTask() {\n    console.log(todo);\n    let id = todo.id;\n    fetch(`http://localhost:3000/list/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(todo)\n    }).then(res => res.json());\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    className: todo.complete ? \"strike\" : \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      id: \"task\",\n      children: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      id: \"due\",\n      children: due\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"completeCheck\",\n        type: \"checkbox\",\n        onChange: handleClick,\n        defaultChecked: complete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(DeleteTask, {\n        todo: todo,\n        deleteTasks: deleteTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskItem, \"Jt5Qqzk2cPMO7kpXD0Yj1PZgaNY=\");\n\n_c = TaskItem;\nexport default TaskItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"sources":["/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/TaskItem.js"],"names":["React","useState","DeleteTask","TaskItem","todo","deleteTasks","taskComplete","setTaskComplete","tasks","due","complete","handleClick","updateTask","console","log","id","fetch","method","headers","body","JSON","stringify","then","res","json"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,QAAQ,GAAG,QAAyB;AAAA;;AAAA,MAAxB;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAwB;AACxC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,EAAhD;AACA,QAAM;AAACO,IAAAA,KAAD;AAAQC,IAAAA,GAAR;AAAaC,IAAAA;AAAb,MAAyBN,IAA/B,CAFwC,CAEH;;AAErC,WAASO,WAAT,GAAsB;AACpB,QAAGP,IAAI,CAACM,QAAL,IAAiB,KAApB,EAA0B;AACxBN,MAAAA,IAAI,CAACM,QAAL,GAAgB,IAAhB;AACD,KAFD,MAGI;AACFN,MAAAA,IAAI,CAACM,QAAL,GAAgB,KAAhB;AACD;;AACDE,IAAAA,UAAU;AACVL,IAAAA,eAAe,CAACH,IAAI,CAACM,QAAN,CAAf,CARoB,CAQW;AAChC;;AAED,WAASE,UAAT,GAAqB;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACA,QAAIW,EAAE,GAAGX,IAAI,CAACW,EAAd;AACAC,IAAAA,KAAK,CAAE,8BAA6BD,EAAG,EAAlC,EAAqC;AACtCE,MAAAA,MAAM,EAAE,KAD8B;AAEtCC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT,OAF6B;AAMtCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAejB,IAAf;AANgC,KAArC,CAAL,CAQGkB,IARH,CAQQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARf;AASD;;AAED,sBACE;AAAI,IAAA,SAAS,EAAEpB,IAAI,CAACM,QAAL,GAAgB,QAAhB,GAA2B,EAA1C;AAAA,4BACE;AAAI,MAAA,EAAE,EAAC,MAAP;AAAA,gBAAeF;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,EAAE,EAAC,KAAP;AAAA,gBAAcC;AAAd;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,8BACE;AAAO,QAAA,EAAE,EAAC,eAAV;AAA0B,QAAA,IAAI,EAAC,UAA/B;AAA0C,QAAA,QAAQ,EAAEE,WAApD;AAAiE,QAAA,cAAc,EAAED;AAAjF;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAME;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEN,IAAlB;AAAwB,QAAA,WAAW,EAAEC;AAArC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAzCD;;GAAMF,Q;;KAAAA,Q;AA2CN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport DeleteTask from './DeleteTask';\n\nconst TaskItem = ({todo, deleteTasks}) => {\n  const [taskComplete, setTaskComplete] = useState();\n  const {tasks, due, complete} = todo; //deconstructs task\n\n  function handleClick(){\n    if(todo.complete == false){\n      todo.complete = true;\n    }\n    else{\n      todo.complete = false;\n    }\n    updateTask();\n    setTaskComplete(todo.complete) //updates dom for if complete or not\n  }\n\n  function updateTask(){\n    console.log(todo)\n    let id = todo.id\n    fetch(`http://localhost:3000/list/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(todo),\n      })\n      .then(res => res.json())\n  }\n\n  return (\n    <tr className={todo.complete ? \"strike\" : \"\"}>{/* if the task is complete put classname as strike, if its not complete have no class name */}\n      <td id=\"task\">{tasks}</td>\n      <td id=\"due\">{due}</td>\n      <td>\n        <input id=\"completeCheck\" type=\"checkbox\" onChange={handleClick} defaultChecked={complete}/> {/* defaultChecked keeps marked when refreshed*/}\n      </td>\n      <td>\n          <DeleteTask todo={todo} deleteTasks={deleteTasks}/>\n      </td>\n    </tr>\n  )\n}\n\nexport default TaskItem"]},"metadata":{},"sourceType":"module"}