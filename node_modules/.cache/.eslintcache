[{"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/index.js":"1","/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/App.js":"2","/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/About.js":"3","/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/TaskList.js":"4","/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/Header.js":"5","/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/TaskItem.js":"6","/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/CreateTask.js":"7","/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/DeleteTask.js":"8","/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/NavBar.js":"9","/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/ErrorPage.js":"10"},{"size":215,"mtime":1651643773214,"results":"11","hashOfConfig":"12"},{"size":708,"mtime":1651644410699,"results":"13","hashOfConfig":"12"},{"size":108,"mtime":1651556420921,"results":"14","hashOfConfig":"12"},{"size":1182,"mtime":1651645094079,"results":"15","hashOfConfig":"12"},{"size":175,"mtime":1651562229660,"results":"16","hashOfConfig":"12"},{"size":1462,"mtime":1651650104223,"results":"17","hashOfConfig":"12"},{"size":1736,"mtime":1651644532401,"results":"18","hashOfConfig":"12"},{"size":552,"mtime":1651644588093,"results":"19","hashOfConfig":"12"},{"size":365,"mtime":1651645696860,"results":"20","hashOfConfig":"12"},{"size":172,"mtime":1651682286372,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wen6v6",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/index.js",[],[],"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/App.js",["57"],[],"import './App.css';\nimport React from 'react';\nimport { BrowserRouter, Routes, Route, Switch } from \"react-router-dom\";\nimport Header from './components/Header';\nimport TaskList from './components/TaskList';\nimport About from './components/About';\nimport NavBar from './components/NavBar';\nimport ErrorPage from './components/ErrorPage';\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter>\n        <Header />\n        <NavBar />\n          <Routes>\n            <Route path=\"/about\" element={ <About /> } />\n            <Route path=\"/\" element={ <TaskList /> } />\n            <Route path=\"*\" element={<ErrorPage />} />\n          </Routes>\n      </BrowserRouter>\n    </div>\n\n  );\n}\n\nexport default App;\n",[],"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/About.js",[],[],"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/TaskList.js",[],[],"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/Header.js",[],[],"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/TaskItem.js",["58","59"],[],"import React, { useState } from 'react'\nimport DeleteTask from './DeleteTask';\n\nconst TaskItem = ({todo, todoList, setTodoList}) => {\n  const [taskComplete, setTaskComplete] = useState();\n  const {tasks, due, complete} = todo; //deconstructs task\n\n\n  function handleClick(){\n    if(todo.complete == false){\n      todo.complete = true;\n    }\n    else{\n      todo.complete = false;\n    }\n    updateTask();\n    setTaskComplete(todo.complete) //updates dom for if complete or not\n  }\n\n  function updateTask(){\n    console.log(todo.complete ? \"Complete\" : \"Incomplete\", todo)\n\n    let id = todo.id\n    fetch(`http://localhost:3000/list/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(todo),\n      })\n      .then(res => res.json())\n  }\n\n  return (\n    <tr className='task-row'>{/* if the task is complete put classname as strike, if its not complete have no class name */}\n      <td>\n        <input id=\"completeCheck\" type=\"checkbox\" onChange={handleClick} defaultChecked={complete}/> {/* defaultChecked keeps marked when refreshed*/}\n      </td>\n      <td id=\"task\" className={todo.complete ? \"strike\" : \"\"}>{tasks}</td>\n      <td id=\"due\" className={todo.complete ? \"strike\" : \"\"}>{due}</td>\n      <td>\n          <DeleteTask todo={todo} todoList={todoList} setTodoList={setTodoList}/>\n      </td>\n    </tr>\n  )\n}\n\nexport default TaskItem",[],"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/CreateTask.js",["60","61"],[],"import React, {useState} from 'react'\n\nconst CreateTask = ({updateTasks, setTodoList, todoList}) => {\n    const [newAdded, setNewAdded] = useState({})\n    const [addTodo, setAddTodo] = useState({\n        id: \"\",\n        tasks: \"\",\n        due: \"\",\n        complete: false\n    });\n\n    const handleChange = (event) => {\n        setAddTodo({ ...addTodo, [event.target.name]: event.target.value });\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if(addTodo.tasks === \"\"){\n        return console.log(\"Please add a task\")\n        };\n        if( addTodo.due === \"\"){\n            return console.log(\"Please add a due date\")\n        }\n\n        fetch(\"http://localhost:3000/list\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(addTodo),\n        })\n        .then(res => res.json())\n        .then(data => setTodoList([...todoList, data]))\n        .then(setAddTodo({ //clearing input elements\n            id: \"\",\n            tasks: \"\",\n            due: \"\",\n            complete: false\n            }))\n        \n        \n        console.log(\"Added\", addTodo)\n        document.getElementById(\"tasks-input\").focus(); //focusing on input elements after re-render \n    }\n\n  return (\n    <form id=\"formStyle\" onSubmit={handleSubmit}>\n        {/* create an input element */}\n          <input  id=\"tasks-input\" type=\"text\" name=\"tasks\" placeholder=\"task to add\" value={addTodo.tasks} onChange={handleChange} autoFocus/>\n          <input type=\"text\" name=\"due\" placeholder=\"due date of task\" value={addTodo.due} onChange={handleChange}/>\n          <button id='add-button'>Add Task</button>\n    </form>\n  )\n}\n\nexport default CreateTask","/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/DeleteTask.js",[],[],"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/NavBar.js",[],[],"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/ErrorPage.js",[],[],{"ruleId":"62","severity":1,"message":"63","line":3,"column":40,"nodeType":"64","messageId":"65","endLine":3,"endColumn":46},{"ruleId":"62","severity":1,"message":"66","line":5,"column":10,"nodeType":"64","messageId":"65","endLine":5,"endColumn":22},{"ruleId":"67","severity":1,"message":"68","line":10,"column":22,"nodeType":"69","messageId":"70","endLine":10,"endColumn":24},{"ruleId":"62","severity":1,"message":"71","line":4,"column":12,"nodeType":"64","messageId":"65","endLine":4,"endColumn":20},{"ruleId":"62","severity":1,"message":"72","line":4,"column":22,"nodeType":"64","messageId":"65","endLine":4,"endColumn":33},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'taskComplete' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'newAdded' is assigned a value but never used.","'setNewAdded' is assigned a value but never used."]