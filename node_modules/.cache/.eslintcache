[{"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/index.js":"1","/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/App.js":"2","/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/About.js":"3","/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/TaskList.js":"4","/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/Header.js":"5","/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/TaskItem.js":"6","/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/CreateTask.js":"7","/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/DeleteTask.js":"8","/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/NavBar.js":"9","/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/ErrorPage.js":"10"},{"size":322,"mtime":1652206321637,"results":"11","hashOfConfig":"12"},{"size":640,"mtime":1652206479372,"results":"13","hashOfConfig":"12"},{"size":427,"mtime":1652294206735,"results":"14","hashOfConfig":"12"},{"size":1868,"mtime":1652465706979,"results":"15","hashOfConfig":"12"},{"size":175,"mtime":1651562229660,"results":"16","hashOfConfig":"12"},{"size":1475,"mtime":1652432379101,"results":"17","hashOfConfig":"12"},{"size":1622,"mtime":1652431993996,"results":"18","hashOfConfig":"12"},{"size":478,"mtime":1652431466893,"results":"19","hashOfConfig":"12"},{"size":366,"mtime":1652279982561,"results":"20","hashOfConfig":"12"},{"size":172,"mtime":1651682286372,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wen6v6",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/index.js",[],[],"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/App.js",[],[],[],"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/About.js",[],[],"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/TaskList.js",[],[],"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/Header.js",[],[],"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/TaskItem.js",["56","57"],[],"import React, { useState } from 'react';\nimport DeleteTask from './DeleteTask';\n\nconst TaskItem = ({handleDelete, todo}) => {\n  const [taskComplete, setTaskComplete] = useState();\n  const {tasks, due, complete} = todo; //deconstructs task. takes keys from object and assigns them as variables\n\n  function handleClick(){\n    if(todo.complete == false){\n      todo.complete = true;\n    }\n    else{\n      todo.complete = false;\n    }\n    updateTask();\n    setTaskComplete(todo.complete) //updates dom for if complete or not\n  }\n\n  function updateTask(){\n    console.log(todo.complete ? \"Complete\" : \"Incomplete\", todo)\n\n    fetch(`http://localhost:3000/list/${todo.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(todo),\n      })\n      .then(res => res.json())\n  }\n\n  return (\n    <tr className='task-row'>\n      <td>\n        <input id=\"completeCheck\" type=\"checkbox\" onChange={handleClick} defaultChecked={complete}/> {/* defaultChecked keeps marked when refreshed*/}\n      </td>\n      <td id=\"task\" className={todo.complete ? \"strike\" : \"\"}>{tasks}</td>{/* if the task is complete put classname as strike, if its not complete have no class name */}\n      <td id=\"due\" className={todo.complete ? \"strike\" : \"\"}>{due}</td>\n      <td>\n          <DeleteTask handleDelete={handleDelete} todo={todo}/>\n      </td>\n    </tr>\n  )\n}\n\nexport default TaskItem",[],"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/CreateTask.js",[],[],"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/DeleteTask.js",[],[],"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/NavBar.js",[],[],"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/ErrorPage.js",[],[],[],{"ruleId":"58","severity":1,"message":"59","line":5,"column":10,"nodeType":"60","messageId":"61","endLine":5,"endColumn":22},{"ruleId":"62","severity":1,"message":"63","line":9,"column":22,"nodeType":"64","messageId":"65","endLine":9,"endColumn":24},"no-unused-vars","'taskComplete' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]