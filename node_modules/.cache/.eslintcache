[{"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/index.js":"1","/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/App.js":"2","/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/Header.js":"3","/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/TaskList.js":"4","/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/TaskItem.js":"5","/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/CreateTask.js":"6"},{"size":211,"mtime":1650954810307,"results":"7","hashOfConfig":"8"},{"size":291,"mtime":1651137549213,"results":"9","hashOfConfig":"8"},{"size":111,"mtime":1650956457337,"results":"10","hashOfConfig":"8"},{"size":732,"mtime":1651135110232,"results":"11","hashOfConfig":"8"},{"size":1375,"mtime":1651137370245,"results":"12","hashOfConfig":"8"},{"size":370,"mtime":1651137919370,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wen6v6",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/index.js",[],[],"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/App.js",[],[],[],"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/Header.js",[],[],[],"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/TaskList.js",[],[],"/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/TaskItem.js",["35","36"],[],"import React, { useState } from 'react'\n\nconst TaskItem = ({todo}) => {\n  const [taskComplete, setTaskComplete] = useState();\n  const {tasks, due, complete} = todo; //deconstructs task\n\n  function handleClick(){\n    if(todo.complete == false){\n      todo.complete = true;\n    }\n    else{\n      todo.complete = false;\n    }\n    updateTask();\n    setTaskComplete(todo.complete) //updates dom for if complete or not\n  }\n\n  function updateTask(){\n    console.log(todo)\n    let id = todo.id\n    fetch(`http://localhost:3000/list/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(todo),\n      })\n      .then(res => res.json())\n  }\n\n  return (\n    <tr>\n      <td id=\"task\" className={todo.complete ? \"strike\" : \"\"}>{tasks}</td>\n      <td id=\"due\" className={todo.complete ? \"strike\" : \"\"}>{due}</td>\n      <td>\n        <input id=\"completeCheck\" type=\"checkbox\" onChange={handleClick} defaultChecked={complete}/> {/* defaultChecked keeps marked when refreshed*/}\n      </td>\n      <td>\n        <button className=\"btn btn-delete\">\n          <span className=\"mdi mdi-delete mdi-24px\"></span>\n          <span className=\"mdi mdi-delete-empty mdi-24px\"></span>\n          <span>Delete</span>\n        </button>\n      </td>\n    </tr>\n  )\n}\n\nexport default TaskItem","/Users/garyflugel/Development/code/Projects/Phase-2/tasker/src/components/CreateTask.js",[],[],{"ruleId":"37","severity":1,"message":"38","line":4,"column":10,"nodeType":"39","messageId":"40","endLine":4,"endColumn":22},{"ruleId":"41","severity":1,"message":"42","line":8,"column":22,"nodeType":"43","messageId":"44","endLine":8,"endColumn":24},"no-unused-vars","'taskComplete' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]